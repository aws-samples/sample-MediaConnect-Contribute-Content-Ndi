AWSTemplateFormatVersion: 2010-09-09

Description: This template deploys a AWS Windows EC2 Instance and downloads the NVIDIA driver
             installer from S3.
             The PrefixName parameter is prefixed to the resource names that are created, as
             shown below.
              * EC2 KeyPair named <PrefixName>KeyPair
              * EC2 instance named <PrefixName>WindowsEC2Instance

            **WARNING** This template creates EC2 Instance and related resources. You will be billed
            for the AWS resources used if you create a stack from this template.

Parameters:
  PrefixName:
    Type: String
    Description: A name that is prefixed to resource names.

  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: The ID of the existing VPC to use.

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: ID of the subnet to use.

  SecurityGroupIds:
    Type: CommaDelimitedList # Required when using a nested stack to pass a list as a String.
    Description: Comma delimited list of security group IDs to use.

  IAMInstanceRoleName:
    Type: String
    Description: Name of the IAM Instance role to use.

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-windows-latest/Windows_Server-2022-English-Full-Base # AMI for Microsoft Windows 2022 Datacenter edition. [English]
    Description: AMI ID for the Windows EC2 Instance.

  InstanceType:
    Type: String
    Default: g4dn.xlarge # This is the minimum type required for NDI Tools.
    Description: Instance type for EC2 Instance.

Resources:
  NewKeyPair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: !Sub "${PrefixName}KeyPair"

  IAMInstanceProfile: 
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub "${PrefixName}InstanceProfile"
      Roles: 
        - !Ref IAMInstanceRoleName

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref IAMInstanceProfile
      VpcId: !Ref VPCId
      KeyName: !Ref NewKeyPair
      SecurityGroupIds: !Ref SecurityGroupIds
      SubnetId: !Ref SubnetId
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            DeleteOnTermination: true
            VolumeSize: 50 # Default size is 30MB. Increase to ensure NVIDIA driver can install correctly.
            VolumeType: gp3
            Encrypted: true
      Tags:
        - Key: Name
          Value: !Sub "${PrefixName}WindowsEC2Instance"
      UserData:
        # The PowerShell script below runs on the EC2 instance to download the NVIDIA driver.
        Fn::Base64: |
          <powershell>
            # Download NVIDIA driver.
            $Bucket = "nvidia-gaming"
            $KeyPrefix = "windows/latest"
            $LocalPath = "$home\Desktop\NVIDIA"
            $Objects = Get-S3Object -BucketName $Bucket -KeyPrefix $KeyPrefix -Region us-east-1
            foreach ($Object in $Objects) {
            $LocalFileName = $Object.Key
            if ($LocalFileName -ne '' -and $Object.Size -ne 0) {
            $LocalFilePath = Join-Path $LocalPath $LocalFileName
            Copy-S3Object -BucketName $Bucket -Key $Object.Key -LocalFile $LocalFilePath -Region us-east-1
            }
            }
          </powershell>

  ElasticIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !GetAtt EC2Instance.InstanceId

Outputs:
  InstanceId:
    Description: The ID of the created EC2 Instance.
    Value: !GetAtt EC2Instance.InstanceId

  PublicIp:
    Description: EC2 Instance Public IP Address.
    Value: !GetAtt EC2Instance.PublicIp

  PrivateIp:
    Description: EC2 Instance Private IP Address.
    Value: !GetAtt EC2Instance.PrivateIp
